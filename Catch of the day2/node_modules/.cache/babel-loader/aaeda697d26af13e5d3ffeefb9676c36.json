{"ast":null,"code":"import _classCallCheck from \"/Users/david/dportilla/learning JS/js-exercises/Catch of the day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/dportilla/learning JS/js-exercises/Catch of the day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/dportilla/learning JS/js-exercises/Catch of the day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/dportilla/learning JS/js-exercises/Catch of the day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/dportilla/learning JS/js-exercises/Catch of the day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/dportilla/learning JS/js-exercises/Catch of the day/src/components/Order.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nvar Order =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Order, _Component);\n\n  function Order() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Order)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderOrder = function (key) {\n      var fish = _this.props.fishes[key];\n      var count = _this.props.order[key];\n      var isAvailable = fish && fish.status === 'available';\n      var transitionOptions = {\n        classNames: 'order',\n        key: key,\n        timeout: {\n          enter: 500,\n          exit: 500\n        }\n      }; // check if fish was loaded\n\n      if (!fish) return null; // if fish is sold out\n\n      if (!isAvailable) {\n        return React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \" Sorry \", fish ? fish.name : 'fish', \" is no longer available \"));\n      }\n\n      return React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"li\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(TransitionGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(CSSTransition, {\n        classNames: \"count\",\n        key: count,\n        timeout: {\n          enter: 500,\n          exit: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, count))), \"lbs \", fish.name, formatPrice(count * fish.price), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.removeFromOrder(key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Remove\"))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orderIds = Object.keys(this.props.order);\n      var total = orderIds.reduce(function (prevTotal, key) {\n        var fish = _this2.props.fishes[key];\n        var count = _this2.props.order[key];\n        var isAvailable = fish && fish.status === 'available';\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Order\"), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, orderIds.map(this.renderOrder)), React.createElement(\"div\", {\n        className: \"total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Total:\", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(Component);\n\nOrder.propTypes = {\n  fishes: PropTypes.object,\n  order: PropTypes.object,\n  removeFromOrder: PropTypes.func\n};\nexport { Order as default };","map":{"version":3,"sources":["/Users/david/dportilla/learning JS/js-exercises/Catch of the day/src/components/Order.js"],"names":["React","Component","PropTypes","formatPrice","TransitionGroup","CSSTransition","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","name","price","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","propTypes","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nexport default class Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  }\n  renderOrder = key => {\n    const fish = this.props.fishes[ key ]\n    const count = this.props.order[ key ]\n    const isAvailable = fish && fish.status === 'available'\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 500 }\n    }\n    // check if fish was loaded\n    if (!fish) return null\n    // if fish is sold out\n    if (!isAvailable) {\n      return (\n        <CSSTransition { ...transitionOptions }>\n          <li> Sorry { fish ? fish.name : 'fish' } is no longer available </li>\n        </CSSTransition>)\n    }\n    return (\n      <CSSTransition { ...transitionOptions }>\n        <li key={ key } >\n          <span>\n            <TransitionGroup>\n              <CSSTransition classNames=\"count\" key={ count } timeout={ { enter: 500, exit: 500 } }>\n                <span>{ count }</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs { fish.name }\n            { formatPrice(count * fish.price) }\n            <button onClick={ () => this.props.removeFromOrder(key) }>Remove</button>\n          </span>\n        </li>\n      </CSSTransition>\n    )\n  }\n  render () {\n    const orderIds = Object.keys(this.props.order)\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[ key ]\n      const count = this.props.order[ key ]\n      const isAvailable = fish && fish.status === 'available'\n      if (isAvailable) {\n        return prevTotal + (count * fish.price)\n      }\n      return prevTotal\n    }, 0)\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component='ul' className=\"order\">\n          { orderIds.map(this.renderOrder) }\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{ formatPrice(total) }</strong>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}